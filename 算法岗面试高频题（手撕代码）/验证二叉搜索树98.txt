class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        def helper(root,min_num,max_num):
            if not root:
                return True
            if root.val<=min_num or root.val>=max_num:
                return False
            return helper(root.left,min_num,root.val) and helper(root.right,root.val,max_num)
        return helper(root,float("-inf"),float("inf"))
        



class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        ans=[]
        def inorder(root):
            if not root:
                return
            inorder(root.left)
            ans.append(root.val)
            inorder(root.right)
        inorder(root)
        for i in range(len(ans)-1):
            if ans[i]>=ans[i+1]:
                return False
        return True
        