class Solution:
    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:
        # 贪心的关键在于按照end排序，而不是start。
        intervals.sort(key = lambda x:x[1])
        end = -float('inf')
        cnt = 0
        for i in intervals:
            start = i[0]
            if start >= end:
                cnt += 1
                end = i[1]
        return (len(intervals) - cnt)



class Solution:
    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:
        n = len(intervals)
        if n == 0: return 0
        dp = [1] * n
        ans = 1
        intervals.sort(key=lambda a: a[1])

        for i in range(len(intervals)):
            for j in range(i - 1, -1, -1):
                if intervals[i][0] >= intervals[j][1]:
                    dp[i] = max(dp[i], dp[j] + 1)
                    ans = max(ans, dp[i])

        return n - ans

