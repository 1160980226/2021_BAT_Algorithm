

class Solution:
    def countSmaller(self, nums: List[int]) -> List[int]:
        ans=[0]*len(nums)
        for i in range(len(nums)-1):
            count=0
            for j in range(i+1,len(nums)):
                if  nums[j]<nums[i]:
                    count+=1
            ans[i]=count
        return ans




class Solution:
    def countSmaller(self, nums: List[int]) -> List[int]:
        if not nums:
            return None
        ans=[0]
        nums_sort=[nums[-1]]
        for i in range(len(nums)-2,-1,-1):
            index=self.bina_search(nums_sort,nums[i])
            nums_sort.insert(index,nums[i])
            ans.insert(0,index)
        return ans

    def bina_search(self,num,target):
        left=0
        right=len(num)-1
        while left<=right:
            mid=(left+right)>>1
            if num[mid]>=target:
                right=mid-1
            else:
                left=mid+1
        return left
