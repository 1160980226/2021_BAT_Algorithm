"babad"
"bab"
def longestPalindrome(s):
	max_len,result=1,""
	for i in range(len(s)-1):
		for j in range(i+1,len(s)+1):
			if s[i:j]=s[i:j][::-1]:
				if j-i>max_len:
					max_len=j-i
					result=s[i:j]
	return result
	
	
	
def longestPalindrome(s):
	if not s:
		return ""
	s_len = len(s)
	mem=[[0]*s_len for _ in range(s_len)]
	left,right,result_len=0,0,0
	for j in range(s_len):
		for i in range(j):
			if s[i] == s[j] and (j-i<2 or mem[i+1][j-1]):
				mem[i][j]=1
			if mem[i][j] and result_len<j-i+1:
				result_len=j-i+1
				left,right=i,j
		mem[j][j]=1
	return s[left:right+1]
	
	
	
	
	
	

	
def longestPalindrome(s):
	if not s or len(s)<1:
		return ""
	def expandAroundCenter(left,right):
		L,R=left,right
		while L>=0 and R<len(s) and s[L]=s[R]:
			L -=1
			R +=1
		return R-L-1
	left,right=0,0
	for i in range(len(s)):
		len1=expandAroundCenter(i,i)
		len2=expandAroundCenter(i,i+1)
		max_len=max(len1,len2)
		if max_len>right-left:
			left=i-(max_len-1)//2
			right=i+max_len//2
		return s[left:right+1]
		
				