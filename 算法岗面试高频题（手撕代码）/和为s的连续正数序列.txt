*/c++
class Solution {
public:
    vector<vector<int> > FindContinuousSequence(int sum) {
        vector<vector<int> > allRes;
        int phigh = 2,plow = 1;
         
        while(phigh > plow){
            int cur = (phigh + plow) * (phigh - plow + 1) / 2;
            if( cur < sum)
                phigh++;
             
            if( cur == sum){
                vector<int> res;
                for(int i = plow; i<=phigh; i++)
                    res.push_back(i);
                allRes.push_back(res);
                plow++;
            }
             
            if(cur > sum)
                plow++;
        }
         
        return allRes;
    }
};


*/python
class Solution:
	def FindContinuousSequence(self,sum):
		left = 1
		right = 2
		res = []
		while left<right and right<sum//2+1:
			sum1 = (left+right)*(right-left+1)//2
			if sum1<sum:
				right +=1
			elif sum1>sum:
				left +=1
			else:
				res.append(list(range(left,right+1)))
				left +=1
		return res
				
				

				
			
			
			