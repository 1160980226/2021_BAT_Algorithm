class Solution:
    def inorderTraversal(self, root: TreeNode) -> List[int]:
        def helper(root):
            if not root:
                return 
            helper(root.left)
            res.append(root.val)
            helper(root.right)
        res=[]
        helper(root)
        return res
		
class Solution:
	def inorderTraversal(self,root):
		res=[]
		if not root:
			return res
		stack=[]
		cur=root
		while stack or cur:
			while cur:
				stack.append(cur)
				cur=cur.left
			cur=stack.pop()
			res.append(cur.val)
			cur=cur.right
		return res