class Solution:
    def hasPathSum(self, root: TreeNode, sum: int) -> bool:
        if not root:
            return False
        def helper(root,sum1):
            if not root:
                return False
            sum1+=root.val
            if sum1==sum and not root.left and not root.right:
                return True
            return helper(root.left,sum1) or helper(root.right,sum1)

        return helper(root,0)
		
		
		
		
class Solution:
    def hasPathSum(self, root: TreeNode, sum: int) -> bool:
        if not root:
            return False
        stack=[(root,root.val)]
        while stack:
            node, sum1=stack.pop()
            if sum1==sum and not node.left and not node.right:
               return True
            if node.right:
                stack.append((node.right,sum1+node.right.val))
            if node.left:
                stack.append((node.left,sum1+node.left.val))
        return False


