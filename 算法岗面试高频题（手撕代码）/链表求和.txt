class ListNode:
	def __init__(self,x):
		self.val=x
		self.next=None
		
def addTwoNumbers(l1,l2):
	list1=[]
	list2=[]
	while l1:
		list1.append(l1.val)
		l1=l1.next
	while l2:
		list2.append(l2.val)
		l2=l2.next
	list1=list1[::-1]
	list2=list2[::-1]
	sum=int("".join(map(str,list1))+int("".join(map(str,list2)))
	sum_str=str(sum[::-1])
	newHead=ListNode(int(sum_str[0]))
	temp=newHead
	for i in sum_str[1:]:
		node=ListNode(int(i))
		temp.next=node
		temp=temp.next
	return newHead
	
def addTwoNumbers(l1,l2):
	carry=0
	sum=(l1.val+l2.val)%10+carry
	carry=(l1.val+l2.val)//10
	newHead=ListNode(sum)
	temp=newHead
	l1=l1.next
	l2=l2.next
	while l1 or l2:
		sum=(l1.val+l2.val)%10+carry
		carry=(l1.val+l2.val)//10
		node=ListNode(sum)
		temp.next=node
		temp=temp.next
		l1=l1.next or ListNode(0)
		l2=l2.next or ListNode(0)
	if carry!=0:
		node=ListNode(carry)
		temp.next=node
	return newHead
	
	
def addTwoNumbers(l1,l2):
	dummy=ListNode(-1)
	temp=dummy
	carry=0
	while l1 or l2 or carry:
		if l1 is None:
			l1.val=0
		if l2 is None:
			l2.val=0
		sum=(l1.val+l2.val+carry)%10
		carry=(l1.val+l2.val+carry)//10
		l1=l1.next if l1 else None
		l2=l2.next if l2 else None
		temp.next=ListNode(sum)
		temp=temp.next
	return dummy.next
	
		
	
		
		

		
		