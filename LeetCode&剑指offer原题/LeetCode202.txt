class Solution {
public:
    bool isHappy(int n) {
		unordered_set<int> st;
		while(n != 1){
			int sum = 0;
			while(n){
				sum += (n % 10) *(n % 10);
				n /= 10;
			}
			n = sum;
			if(st.count(n)) break;
			st.insert(n);
		}
        return n == 1;
    }
};


*/

class Solution {
public :
	bool isHappy( int n){
		int slow = n, fast = n;
		while(true) {
			slow = findNext(slow);
			fast = findNext(fast);
			fast = findNext(fast);
			if(slow == fast)  break;
		}
		return slow == 1;
	}
	int findNext( int n){
		int res = 0;
		while(n > 0){
			res += (n % 10) *(n % 10);
			n /= 10;
		}
		return res;
	
	}

};
