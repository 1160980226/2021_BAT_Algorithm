*/c++
class Solution {
public:
	int pathSum(TreeNode* root, int sum) {
		if(!root) return 0;
		return sumUp(root,0,sum) + pathSum(root->left,sum) + pathSum(root->right,sum);
	}
	int sumUp(TreeNode* node, int pre, int& sum) {
		if(!node) return 0;
		int cur = pre + node->val;
		return (cur == sum) + sumUp(node->left,cur,sum) + sumUp(node->right,cur,sum);
	}
};

*/python	
class Solution:
	def pathSum(self,root,sum):
		if root == None:
			return 0
		return self.count(root,sum) + self.pathSum(root.left,sum)+self.pathSum(root.right,sum)
	def count(self,root,sum):
		if root == None:
			return 0
		return int(root.val ==  sum)+self.count(root.left,sum-root.val) + self.count(root.right,sum-root.val)
			
			