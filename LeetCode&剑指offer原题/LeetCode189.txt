class Solution {
public:
    void rotate(vector<int>& nums, int k) {
		vector<int> t = nums;
		for(i = 0;i < nums.size(); i++){
			nums[(i+k)%(nums.size())]=t[i];
		}
        
    }
};

/*



class Solution{
	public:
		void rotate (vector<int>& nums, int k){
			if (nums.empty() || (k %= nums.size())==0) return;
			int start = 0,idx = 0, pre = 0 ,cur = nums[0], n = nums.size();
			for (int i = 0; i < n; ++i){
				pre = cur;
				idx = (idx + k) % n;
				cur = nums[idx];
				nums[idx] = pre;
				if (idx == start){
					idx = ++ start;
					cur = nums[idx];
				}			
			
			}
		}   
};

/*
class Solution{
public:
	void rotate(vector<int>& nums, int k){
		if (nums.empty() || (k %= nums.size()) == 0) return ;
		int n = nums.size();
		for (int i = 0; i < n-k; ++i){
			nums.push_back(nums[0]);
			nums.erase(nums.begin());		
		}
		
	}

};



