*/C++解法

class Solution {
public:
    int hammingDistance(int x, int y) {
        int res = 0;
        for(int i = 0; i < 32; ++i){
            if((x & (1 << i)) ^ (y & (1<< i))) {
                ++res;
            }
        }
        return res;
    }
};

*/
class Solution {
public:
    int hammingDistance(int x, int y) {
        int res = 0, exc = x^y;
        for (int i = 0 ; i < 32 ;++i){
            res += (exc >>i) & 1;
        }
        return res;
    }
};

*/
class Solution{
public:
    int hammingDistance(int x, int y) {
        if((x^y) == 0) return 0;
        return (x^y)%2 + hammingDistance(x/2, y/2);
    }
};


*/Python 解法
class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        return bin(x ^ y).count("1")
        
        