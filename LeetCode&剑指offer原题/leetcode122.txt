*/c++

class Solution {
public:
	int maxProfit(vector<int>& prices){
		int res = 0, n = prices.size();
		for(int i = 0; i < n-1; ++i) {
			if(prices[i] < prices[i+1]){
				res += prices[i+1]-prices[i];
			}
		
		}
		return res;
	}
};


*/python
def maxProfit(self,prices)
	return sum(filter(lambda x: x>0, map(lambda x:prices[x+1]-prices[x],range(len(prices)-1))))

	

	
*/
class Solution:
	def maxProfit(self,prices)
		ans=0
		for i in range(1,len(prices)):
			if prices[i]>prices[i-1]:
				ans += prices[i]-prices[i-1]
		return ans
		